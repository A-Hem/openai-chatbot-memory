name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        # Install torch with CPU-only to speed up installation
        pip install torch --index-url https://download.pytorch.org/whl/cpu
        # Install sentence-transformers with dependencies
        pip install sentence-transformers
        # Install project requirements
        pip install -r requirements.txt
    
    - name: Create test directories
      run: |
        mkdir -p tests/tmp
    
    - name: Debug environment
      run: |
        pip list
        python -c "import sys; print(sys.path)"
        ls -la
        pwd
        # Add current directory to PYTHONPATH
        echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV
    
    - name: Run security module tests
      run: |
        # Disable HF symlink warnings
        export HF_HUB_DISABLE_SYMLINKS_WARNING=1
        # Run security module tests first
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/test_encryption.py tests/test_hashing.py -v
    
    - name: Run memory module tests
      run: |
        # Run memory module tests
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/test_secure_memory.py -v
    
    - name: Run embedding module tests
      run: |
        # Run embedding memory tests with lower verbosity and continue on failure
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/test_embedding_memory.py -v || echo "Some embedding tests skipped or failed"
    
    - name: Run coverage report
      run: |
        # Full coverage run
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest --cov=security --cov=memory --cov-report=xml
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black mypy isort
    
    - name: Lint with flake8 (critical errors only)
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    
    # Commented out for initial setup - enable once code is formatted
    # - name: Check formatting with black
    #   run: |
    #     black --check .
    
    # - name: Type check with mypy
    #   run: |
    #     mypy --ignore-missing-imports memory/ security/
    
    # - name: Check imports with isort
    #   run: |
    #     isort --check-only --profile black .